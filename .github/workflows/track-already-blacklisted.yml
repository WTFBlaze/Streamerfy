name: üîç Check If Track Already Blacklisted

on:
  issues:
    types: [opened]

jobs:
  check-blacklist:
    if: contains(github.event.issue.body, 'open.spotify.com/track/')
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üîé Check if track ID is already blacklisted
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const issueBody = context.payload.issue.body;
            const issueNumber = context.payload.issue.number;

            const match = issueBody.match(/open\.spotify\.com\/track\/([a-zA-Z0-9]+)/);
            if (!match) {
              console.log("‚ö†Ô∏è No valid Spotify track link found.");
              return;
            }

            const trackId = match[1];
            const blacklistPath = 'GlobalBlacklist.txt';

            if (!fs.existsSync(blacklistPath)) {
              console.log("‚ö†Ô∏è GlobalBlacklist.txt not found.");
              return;
            }

            const contents = fs.readFileSync(blacklistPath, 'utf-8');
            const alreadyExists = contents.split(/\r?\n/).includes(trackId);

            if (alreadyExists) {
              console.log(`üõë Track ID ${trackId} is already blacklisted.`);

              // Add label
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: ['already-blacklisted']
              });

              // Comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `‚ö†Ô∏è The track \`${trackId}\` is already globally blacklisted.`
              });

              // Close the issue
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                state: 'closed'
              });
            } else {
              console.log(`‚úÖ Track ID ${trackId} is NOT blacklisted.`);
            }
